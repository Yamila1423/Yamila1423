{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPzf7ULmZd51sEz6MaVAb+k",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Yamila1423/Yamila1423/blob/main/Trabajo%20final\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nLJ5XHke-sOC"
      },
      "outputs": [],
      "source": [
        "Listas de peliculas"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "class Pelicula: üìΩÔ∏è\n",
        "    def __init__(self, nombre):\n",
        "        self.nombre = nombre  # no privado para simplificar\n",
        "\n",
        "class lista:\n",
        "    def __init__(self, documento):\n",
        "        self.documento = documento\n",
        "        try:\n",
        "            open(self. Documento, 'x').close()  # crea el documento si no existe\n",
        "        except FileExistsError: ‚ùå\n",
        "            pass\n",
        "\n",
        "    def agregar(self, nombre_pelicula):\n",
        "       with open(self.documento, 'a') as f:\n",
        "            f.write(nombre_pelicula + '\\n')\n",
        "\n",
        "    def listar(self):\n",
        "        try:\n",
        "            with open(self.documwnto, 'r') as f:\n",
        "                contenido = f.readlines()\n",
        "                if contenido:\n",
        "                    print(\"Pel√≠culas:\")\n",
        "                    for linea in contenido:\n",
        "                        print(\"‚Ä¢\", linea.strip())\n",
        "                else:\n",
        "                    print(\"No hay pel√≠culas cargadas.\")\n",
        "        except FileNotFoundError: ‚ùå\n",
        "            print(\"lista no encontrado.\")\n",
        "\n",
        "    def eliminar(self):\n",
        "        import os\n",
        "        if os.path.exists(self.documento):\n",
        "            os.remove(self.documento)\n",
        "            print(\"documento eliminado.\")\n",
        "        else:\n",
        "            print(\"El documento no existe.\")\n",
        "\n",
        "def menu():\n",
        "    print(\"\\n1. Agregar pel√≠cula\")\n",
        "    print(\"2. Ver pel√≠culas\")\n",
        "    print(\"3. Borrar lista\")\n",
        "    print(\"4. Salir\")\n",
        "\n",
        "def iniciar():\n",
        "    nombre = input(\"Nombre del documento documento (.txt): \")\n",
        "    Documento = documento(nombre)\n",
        "\n",
        "    while True:\n",
        "        menu()\n",
        "        opcion = input(\"Opci√≥n: \")\n",
        "\n",
        "        if opcion == '1':\n",
        "            nombre_peli = input(\"T√≠tulo de la pel√≠cula: \")\n",
        "            peli = Pelicula(nombre_peli)\n",
        "            Documento.agregar(peli.nombre)\n",
        "            print(\"Pel√≠cula guardada.\")\n",
        "        elif opcion == '2':\n",
        "            Lista.listar()\n",
        "        elif opcion == '3':\n",
        "            confirmar = input(\"¬øBorrar documento? (s/n): \")\n",
        "            if confirmar.lower() == 's':\n",
        "                Documento.eliminar()\n",
        "        elif opcion == '4':\n",
        "            print(\"Adi√≥s.\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Opci√≥n no v√°lida.\")\n",
        "\n",
        "if __name__ == \"__yami__\":\n",
        "    iniciar()"
      ],
      "metadata": {
        "id": "nznVomTx-tuC"
      }
    }
  ]
}